{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/books": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all books in the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BookInventory"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new book to the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Add a new book",
                "parameters": [
                    {
                        "description": "Book Data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookInventory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BookInventory"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/books/{isbn}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a book by its ISBN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get a book by ISBN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookInventory"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Book not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing book by ISBN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update an existing book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Book Data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookInventory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookInventory"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Book not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a book from the inventory by ISBN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Remove a book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Available copy removed\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"No available copies to remove\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Book not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/libraries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Library"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new library (only users with the role of 'Owner' can create a library)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Create a new library",
                "parameters": [
                    {
                        "description": "Library Data",
                        "name": "library",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Library"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Library"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Only users with the role of 'Owner' can create a library\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"Library with this name already exists\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/libraries/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a library by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Delete a library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Library ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"library deleted successfuly\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"message\": \"library not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"message\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"token string\", \"role\": \"user role\", \"id\": \"user ID\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestEvent"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requests/pending": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestEvent"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requests/{id}": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RequestEvent"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Request not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requests/{id}/approve": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Approver Data",
                        "name": "approver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Issue request approved\", \"issue\": models.IssueRegistry}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid request body\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Request not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requests/{id}/reject": {
            "post": {
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Issue request rejected\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Request not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/admin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new admin user with role \"LibraryAdmin\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/admins": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all admin users with role \"LibraryAdmin\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all admins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieve a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User deleted\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error message\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BookInventory": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "string"
                },
                "available_copies": {
                    "type": "integer"
                },
                "isbn": {
                    "type": "string"
                },
                "lib_id": {
                    "type": "integer"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_copies": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.Credentials": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Library": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RequestEvent": {
            "type": "object",
            "properties": {
                "approval_date": {
                    "type": "string"
                },
                "approver_id": {
                    "type": "integer"
                },
                "book_id": {
                    "type": "string"
                },
                "reader_id": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "request_date": {
                    "type": "string"
                },
                "request_type": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lib_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "description": "Role can be \"LibraryOwner\", \"LibraryAdmin\", \"Reader\"",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}